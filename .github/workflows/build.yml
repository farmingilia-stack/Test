name: Build Android APK

on:
  workflow_dispatch: {}

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Set up Java 17 (Temurin)
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install system deps
        run: |
          set -e
          sudo apt-get update
          sudo apt-get install -y git zip unzip libffi-dev libssl-dev build-essential
          python -m pip install --upgrade pip
          python -m pip install cython buildozer

      - name: Install Android cmdline tools & SDK
        env:
          ANDROID_HOME: ${{ github.workspace }}/android-sdk
          ANDROID_SDK_ROOT: ${{ github.workspace }}/android-sdk
        shell: bash
        run: |
          set -e
          SDK="$ANDROID_SDK_ROOT"
          mkdir -p "$SDK/cmdline-tools"
          curl -sSL https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -o cmdtools.zip
          unzip -q cmdtools.zip -d "$SDK/cmdline-tools"
          mv "$SDK/cmdline-tools/cmdline-tools" "$SDK/cmdline-tools/latest"
          mkdir -p "$HOME/.android" && touch "$HOME/.android/repositories.cfg"
          ( yes | "$SDK/cmdline-tools/latest/bin/sdkmanager" --licenses ) || true
          "$SDK/cmdline-tools/latest/bin/sdkmanager" \
            "platform-tools" \
            "platforms;android-34" \
            "build-tools;36.0.0" \
            "build-tools;34.0.0" \
            "ndk;25.2.9519653"

          # مسیر سازگار با ابزارهای قدیمی
          mkdir -p "$SDK/tools"
          ln -sfn "$SDK/cmdline-tools/latest/bin" "$SDK/tools/bin"

      - name: Prepare SDK/NDK links for Buildozer
        shell: bash
        run: |
          set -e
          SDK="${GITHUB_WORKSPACE}/android-sdk"
          NDK="$SDK/ndk/25.2.9519653"
          mkdir -p "$HOME/.buildozer/android/platform"
          ln -sfn "$SDK" "$HOME/.buildozer/android/platform/android-sdk"
          ln -sfn "$NDK" "$HOME/.buildozer/android/platform/android-ndk-r25b"
          ls -la "$HOME/.buildozer/android/platform"

      - name: Build APK (debug) with full logs
        shell: bash
        run: |
          set -e
          export ANDROID_SDK_ROOT="${GITHUB_WORKSPACE}/android-sdk"
          export ANDROID_HOME="${ANDROID_SDK_ROOT}"
          export ANDROIDSDK="${ANDROID_SDK_ROOT}"
          export ANDROIDNDK="${ANDROID_SDK_ROOT}/ndk/25.2.9519653"
          export PATH="$ANDROID_SDK_ROOT/platform-tools:$ANDROID_SDK_ROOT/build-tools/36.0.0:$ANDROID_SDK_ROOT/build-tools/34.0.0:$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$ANDROID_SDK_ROOT/tools/bin:$PATH"
          # فقط -v؛ سطح لاگ از buildozer.spec خوانده می‌شود
          buildozer -v android debug

      - name: Upload APK
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: app-apk
          path: bin/*.apk

      - name: Dump build logs (always)
        if: always()
        run: |
          echo "=== .buildozer logs ==="
          find .buildozer -type f \( -name "*.log" -o -name "build*.txt" \) -maxdepth 5 -print 2>/dev/null || true
          for f in $(find .buildozer -type f -name "*.log" -maxdepth 5 2>/dev/null); do
            echo "--- $f ---"; tail -n 200 "$f" || true; done
